#include <GL/glut.h>
#include <iostream>
#include <cmath>
using namespace std;

int x1_, y1_, x2_, y2_;
int clickCount = 0;
int lineStyle = 1; // 1: Simple, 2: Dotted, 3: Dashed, 4: Solid

void init() {
    glClearColor(1, 1, 1, 1);
    gluOrtho2D(-320, 320, -240, 240);  // Center at (0, 0)
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0, 0, 0);
    glFlush();
}

void putPixel(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

void DDA(int x1, int y1, int x2, int y2, int style) {
    float dx = x2 - x1;
    float dy = y2 - y1;
    float steps = max(abs(dx), abs(dy));
    float xInc = dx / steps;
    float yInc = dy / steps;

    float x = x1, y = y1;

    for (int i = 0; i <= steps; i++) {
        if (style == 1) { // Simple
            putPixel(round(x), round(y));
        } else if (style == 2) { // Dotted
            if (i % 5 == 0)
                putPixel(round(x), round(y));
        } else if (style == 3) { // Dashed
            if ((i / 5) % 2 == 0)
                putPixel(round(x), round(y));
        } else if (style == 4) { // Solid
            putPixel(round(x), round(y));
        }
        x += xInc;
        y += yInc;
    }

    glFlush();
}

void mouse(int button, int state, int x, int y) {
    y = 480 - y; // Invert Y

    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        if (clickCount == 0) {
            x1_ = x - 320;
            y1_ = y - 240;
            clickCount = 1;
        } else {
            x2_ = x - 320;
            y2_ = y - 240;
            DDA(x1_, y1_, x2_, y2_, lineStyle);
            clickCount = 0;
        }
    }
}

void keyboard(unsigned char key, int x, int y) {
    if (key == '1') lineStyle = 1;
    if (key == '2') lineStyle = 2;
    if (key == '3') lineStyle = 3;
    if (key == '4') lineStyle = 4;
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("DDA Line Styles");
    init();
    glutMouseFunc(mouse);
    glutKeyboardFunc(keyboard);
    glutMainLoop();
    return 0;
}